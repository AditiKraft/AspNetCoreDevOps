trigger:
- master
jobs:
- job: Linux
  pool:
     vmImage: 'Ubuntu 16.04'   
     variables:
     buildConfiguration: 'Release' 
  steps:
  - script: |
       sudo apt-get install sshpass
       docker-compose up -d --build
       dotnet restore
       dotnet build
       cd test/AspNetCoreDevOps.Controllers.Tests
       dotnet test
       cd ..
       cd ..
       docker login  $(dockerId).azurecr.io -u  $(dockerId) -p $(dockerPassword)
       docker build -f dockerfile -t $(dockerId).azurecr.io/$(Build.BuildId) .
       docker push $(dockerId).azurecr.io/$(Build.BuildId)
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker --version'
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker kill dev_api'
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker rm dev_api'
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker kill dev_elasticsearch'
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker rm dev_elasticsearch'
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker kill dev_db'
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker rm dev_db'
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker kill dev_pgadmin'
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker rm dev_pgadmin'
       #sshpass -p $(VmPassword) ssh -o StrictHostKeyChecking=no $(VmUser)@$(VmHost) 'sudo docker-compose -f dev/docker-compose.yml up -d --build'
- job: macOS
  pool:
    vmImage: 'xcode9-macos10.13'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.100' # replace this value with the version that you need for your project
  - script: dotnet build
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.100' # replace this value with the version that you need for your projec
  - script: dotnet build
  
